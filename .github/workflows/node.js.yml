# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Clean-Install dependencies of the project
      run: npm ci
    
    - name: Build project and generate /dist folder
      run: npm run build
   
    - name: Write file with private key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ../key.pem
    
    - name: Change permissions to key.pem
      run: chmod 400 ../key.pem
    
    - name: Check current directory content
      run: ls -a

    - name: Removing all contents from server
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} " rm -r /var/www/html/champs_app/*"
      
    - name: Copying build to server
      run: "scp -r -i ../key.pem ./dist root@${{ secrets.SSH_HOST }}:/var/www/html/champs_app/"

    - name: Copying docker.sh to server
      run: "scp -r -i ../key.pem docker.sh root@${{ secrets.SSH_HOST }}:/var/www/html/champs_app/"

    - name: Copying Dockerfile to server
      run: "scp -r -i ../key.pem Dockerfile root@${{ secrets.SSH_HOST }}:/var/www/html/champs_app/"

    - name: Copying nginx.conf to server
      run: "scp -r -i ../key.pem nginx.conf root@${{ secrets.SSH_HOST }}:/var/www/html/champs_app/"

    - name: Execute docker.sh
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} "cd /var/www/html/champs_app && sh docker.sh"